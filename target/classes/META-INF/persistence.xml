<?xml version="1.0" encoding="UTF-8"?>

<!-- 클래스패스 내에 해당 설정파일이 있으면 별도 설정 없이 JPA가 인식함 -->
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" version="2.1">

	<!-- 고유한 영속성 유닛 설정 (name은 유니크한 값으로 설정) -->
	<persistence-unit name="jpa">
		<properties>
			<!-- 필수 옵션 -->
			<!-- javax.persistence는 JPA 표준 속성으로 특정 구현체에 종속되지 않음 -->
			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver" />
			<property name="javax.persistence.jdbc.user" value="sa" />
			<property name="javax.persistence.jdbc.password" value="" />
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:tcp://localhost/~/Documents/h2db/jpa" />
			<!-- hibernate는 하이버네이트에서만 설정됨 -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect" />
			
			<!-- 선택 옵션 -->
			<!-- hibernate가 실행한 sql 출력 -->
			<property name="hibernate.show_sql" value="true" />
			<!-- hibernate가 실행한 sql 정렬 -->
			<property name="hibernate.format_sql" value="true" />
			<!-- hibernate가 실행한 sql에 주석도 함께 출력 -->
			<property name="hibernate.use_sql_comments" value="true" />
			<!-- JPA 표준에 맞춘 새로운 키 생성 전략 사용 -->
			<property name="hibernate.new_generator_mappings" value="true" />
			<!-- 애플리케이션 실행 시점에 테이블 자동 생성 -->
			<property name="hibernate.hbm2ddl.auto" value="create" />
			<!-- 이름 매핑 전략 - 카멜 표기법 -> 언더스코어 표기법 -->
			<property name="hibernate.physical_naming_strategy" value="org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy" />
			<!-- JPA 규격에 맞는 새로운 키 생성 전략 개발 -->
			<property name="hibernate.id.new_generator_mappings" value="true" />
		</properties>
		
		<!-- 참고. 환경에 따라 class를 인식하지 못하는 경우 -->
		<!-- <class>com.devh.example.jpa.chapter2.Member</class> -->
		<!-- <properties />... -->
	</persistence-unit>

</persistence>